## The type of library we want to build. Possible values:
##   relocatable
##   static
LIBRARY_TYPE=static

PLUGINS=awa-workspaces awa-mail awa-storages awa-images awa-comments \
        awa-blogs awa-markedit awa-jobs awa-votes awa-questions \
	awa-countries awa-tags

NAME=awa
LIBNAME=lib${NAME}

include rules.mk


DYNAMO_ARGS=--package AWA.Users.Models \
  --package AWA.Events.Models \
  --package AWA.Permissions.Models \
  db uml/awa.zargo

post-build:
	for i in ${PLUGINS} ; do \
	   $(MAKE) -C plugins/$$i ; \
	done

post-generate:
	for i in ${PLUGINS} ; do \
	   $(MAKE) -C plugins/$$i generate ; \
	done

# Generate the documentation from Ada headers comments.
doc:
	$(DYNAMO) build-doc wiki

# Build and run the unit tests
check test:	test-mysql test-sqlite

test-sqlite:		build regtests.db
	-test T${HAVE_SQLITE} = TFalse || \
	bin/awa_harness -p SQLite -xml awa-sqlite-aunit.xml -config test-sqlite.properties

test-mysql:		build create-mysql-tests
	-test T${HAVE_MYSQL} = TFalse || \
	bin/awa_harness -p MySQL -xml awa-mysql-aunit.xml -config test-mysql.properties

# Create the test sqlite database
regtests.db:
	-rm -f $@
	test T${HAVE_SQLITE} = TTrue && \
	sqlite3 $@ < db/sqlite/create-awa-sqlite.sql

# Create the tables in the database.
# (The database itself must have been created)
create-mysql-tests:
	-test T${HAVE_MYSQL} = TFalse || \
	mysql --defaults-extra-file=db/mysql/mysql.cnf < db/mysql/drop-awa-mysql.sql
	test T${HAVE_MYSQL} = TFalse || \
	mysql --defaults-extra-file=db/mysql/mysql.cnf < db/mysql/create-awa-mysql.sql


# Clean the root project of all build products.
pre-clean:
	# -$(GNATCLEAN) -P awaunit.gpr -XLIBRARY_TYPE=static
	# -$(GNATCLEAN) -P awaunit.gpr -XLIBRARY_TYPE=relocatable
	-rm -rf obj/* lib/*

# Files to package in source distribution
DISTFILES=README LICENSE.txt NOTICE.txt NEWS CHANGES ChangeLog config.guess configure config.sub \
configure.in Makefile.in install-sh \
awa.gpr.in tests.gpr.in samples.gpr.in config.gpr \
src samples regtests db web bundles config awaunit awaunit.gpr.in rules.mk.in \
distrib test-mysql.properties test-sqlite.properties dynamo.xml plugins uml

pre-dist:
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	-rm -rf $(distdir)/samples/bin
	-rm -rf $(distdir)/samples/atlas.gpr
	-rm -rf $(distdir)/samples/tests.gpr
	-rm -rf $(distdir)/samples/autom4te.cache
	-rm -rf $(distdir)/samples/config.status
	-rm -rf $(distdir)/samples/Makefile
	-rm -rf $(distdir)/samples/obj
	-rm -rf $(distdir)/regtests/result
	-rm -rf $(distdir)/distrib/*.gpr
	mkdir $(distdir)/bin
	mkdir $(distdir)/obj
	mkdir $(distdir)/lib

# prepare before releasing a new version of the package
# (collect information about changes and SVN repository)
prepare-release:
	${SVN} update
	${SVN} info > CHANGES
	${SVN} log -v > ChangeLog

pre-install:
	$(MKDIR) -p ${includedir}/awaunit
	$(MKDIR) -p ${projectdir}/
	${MKDIR} -p ${alidir}/awaunit/$(LIBRARY_TYPE)
	${CP} awaunit/*.ad[bs] ${includedir}/awaunit
	sed -e "s,INSTALL,${prefix},g" -e "s,LIBRARY_TYPE,$(LIBRARY_TYPE),g" < distrib/awaunit.gpr > ${projectdir}/awaunit.gpr
	${CP} lib/awaunit/$(LIBRARY_TYPE)/*.ali ${alidir}/awaunit/$(LIBRARY_TYPE)/
ifeq ($(LIBRARY_TYPE),static)
	${CP} lib/awaunit/$(LIBRARY_TYPE)/libawaunit.a ${libdir}/
else
	${CP} -p lib/awaunit/$(LIBRARY_TYPE)/libawaunit.$(LIBVER) ${libdir}/
	cd ${libdir} && \
	rm -f libawaunit.$(LIBEXT) && \
	${LN} libawaunit.$(LIBVER) libawaunit.$(LIBEXT)
endif
	for i in ${PLUGINS} ; do \
	   $(MAKE) -C plugins/$$i install; \
	done
	# Install the AWA UML model in Dynamo UML search path
	unzip -cq uml/awa.zargo awa.xmi > ${dynamodir}/base/uml/AWA.xmi

pre-uninstall:
	rm -rf ${includedir}/awa
	rm -f ${libdir}/libada-awa.a
	rm -f ${projectdir}/awa.gpr
	rm -rf ${dynamodir}/awa
	rm -rf ${alidir}/awa
	rm -rf ${alidir}/awaunit
	rm -rf ${includedir}/awaaunit
	for i in ${PLUGINS} ; do \
	   $(MAKE) -C plugins/$$i uninstall; \
	done
